---
- name: Install HWCert repos
  yum_repository:
    name: hwcert
    description: hwcert YUM repo
    baseurl: http://{{local_repo_ip}}/hwcert
    gpgcheck: no

- name: Install extraOS
  yum_repository:
    name: extraOS
    description: extraos YUM repo
    baseurl: http://{{local_repo_ip}}/extraos
    gpgcheck: no

- name: Install EPEL
  yum_repository:
      name: EPEL
      description: EPEL repo
      baseurl: "{{ epel_url }}"
      gpgcheck: no

- name: Copy HWcert
  copy:
    src: /usr/share/dci-rhel-agent/hwcert-sti
    dest: /opt/

- name: Copy cert package
  copy:
    src: /usr/share/dci-rhel-agent/redhat-certification-hardware-spicegate.noarch.rpm
    dest: /opt/

- name: Copy copr package
  copy:
    src: /usr/share/dci-rhel-agent/yum-plugin-copr.noarch.rpm
    dest: /opt/

- name: Install needed packages
  yum:
    name: "{{ packages }}"
    disable_gpg_check: yes
  vars:
    packages:
    - /opt/yum-plugin-copr.noarch.rpm
    - /opt/redhat-certification-hardware-spicegate.noarch.rpm
    - ansible
    - standard-test-roles

- name: Launch test
  command: ansible-playbook --tags classic tests.yml
  args:
    chdir: /opt/hwcert-sti
  ignore_errors: yes

- name: Ensure directory exist
  file:
    path: /tmp/joblogs-artifacts
    state: directory
  delegate_to: localhost

- name: Ansible delete file glob
  find:
    paths: /tmp/joblogs-artifacts
    patterns: '*'
  register: files_to_delete
  delegate_to: localhost

- name: Ansible remove file glob
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  delegate_to: localhost

- name: List all files to be uploaded
  command: "ls /tmp/artifacts/"
  register: dir_out

- name: Logs files from tests
  fetch:
    src: /tmp/artifacts/{{item}}
    dest: /tmp/joblogs-artifacts/
    flat: yes
  with_items: "{{ dir_out.stdout_lines }}"

- name: Logs files from tests
  shell: "ls *"
  args:
      chdir: /tmp/joblogs-artifacts/
  register: logs
  delegate_to: localhost

- name: Upload logs files to DCI
  dci_file:
    path: '/tmp/joblogs-artifacts/{{ item }}'
    name: '{{ item }}'
    job_id: '{{ hostvars.localhost.job_id }}'
  with_items: "{{ logs.stdout_lines }}"
  delegate_to: localhost

- name: Junits files from tests
  shell: "ls *.xml"
  args:
      chdir: /tmp/joblogs-artifacts/
  register: junits
  delegate_to: localhost

- name: Upload specific junit files to DCI
  dci_file:
    path: '/tmp/joblogs-artifacts/{{ item }}'
    name: '{{ item }}'
    job_id: '{{ hostvars.localhost.job_id }}'
    mime: 'application/junit'
  with_items: "{{ junits.stdout_lines }}"
  delegate_to: localhost
