#!/usr/bin/env python
# -*- coding: utf-8 -*-
import argparse
import os
import signal
import sys
import yaml

def sigterm_handler(signal, frame):
  # To do: Add support for signal (systemd stio is sigterm)
  print('Handle dci-rhel-agent stop here.')
  sys.exit(0)

signal.signal(signal.SIGTERM, sigterm_handler)

def load_settings():
  # To do: path as an arg
  with open('/etc/dci-rhel-agent/settings.yml', 'r') as settings:
    try:
      return(yaml.load(settings, Loader=yaml.SafeLoader))
    except yaml.YAMLError as exc:
      print(exc)
      sys.exit(1)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--start', action='store_true', help="Run dci-rhel-agent")
    parser.add_argument('-k', '--kill', action='store_true', help="Kill dci-rhel-agent")
    parser.add_argument('-d', '--debug', action='store_true', help="Run a dci-rhel-agent shell")
    args = parser.parse_args()

    if args.start:
        print("Starting dci-rhel-agent ...")
        settings = load_settings()
        myCmd = 'source /etc/dci-rhel-agent/dcirc.sh &&  \
        /bin/dci-downloader --settings "/etc/dci-rhel-agent/settings.yml" && \
        podman pull quay.io/distributedci/dci-rhel-agent:stable && \
        podman run --rm -ti --network host \
        -e DCI_CLIENT_ID \
        -e DCI_API_SECRET \
        -e DCI_CS_URL \
        -v /etc/dci-rhel-agent/hooks/:/etc/dci-rhel-agent/hooks/ \
        -v /etc/dci-rhel-agent/settings.yml:/etc/dci-rhel-agent/settings.yml \
        -v /etc/dci-rhel-agent/hosts:/etc/dci-rhel-agent/hosts  \
        -v %s:/var/www/html \
        -v /etc/beaker:/etc/beaker/ \
        quay.io/distributedci/dci-rhel-agent:stable' % (settings['local_repo'])
        os.system(myCmd)

    if args.kill:
        print("Killing dci-rhel-agent ...")
        myCmd = '/usr/bin/podman kill $$(podman ps -a -q  --filter ancestor=dci-rhel-agent)'
        os.system(myCmd)

    if args.debug:
        print("Debug")

if __name__ == "__main__":
    main()