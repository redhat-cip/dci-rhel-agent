---
- name: Update Beaker server config
  hosts: beaker_server
  gather_facts: false
  tags:
    - beaker
  tasks:
    - name: Ensure tftp and tftp-server installed
      package:
        name: "{{ item }}"
      with_items:
        - tftp
        - tftp-server

    - name: Enable tftp server
      ansible.builtin.systemd:
        name: tftp
        state: started
        enabled: true

    - name: Set tftp_home_dir flag on and keep it persistent across reboots
      seboolean:
        name: tftp_home_dir
        state: true
        persistent: true

    - name: Update beaker.conf file
      template:
        src: /usr/share/dci-rhel-agent/templates/beaker.conf.j2
        dest: /etc/NetworkManager/dnsmasq.d/beaker.conf
      register: dns_conf_update

    - name: Setup network manager to run dnsmasq
      copy:
        src: nm-dnsmasq.conf
        dest: /etc/NetworkManager/conf.d/dnsmasq.conf
        mode: 0644

    - name: Restart NetworkManager if any config files were changed
      service:
        name: NetworkManager
        state: restarted
      when: dns_conf_update.changed | default('false') | bool

    - name: Ensure Beaker is up to date on jumpbox
      yum:
        name: beaker-client
        state: latest

    - name: Query systems list
      command: bkr system-list
      register: bkr_systems
      changed_when: false
      become: true
      failed_when: false

    - debug:
        msg: "Current Beaker Systems: {{ bkr_systems.stdout_lines }}"

    - name: Update power settings for each existing test system (requires Beaker 28+)
      command: >
        bkr system-modify
        --power-type={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_type }}
        --power-address={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_address }}
        --power-user={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_user }}
        --power-password={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_password }}
        --power-id={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_id | default(item.key) }}
        {{ item.key }}
      when: item.key in bkr_systems.stdout_lines
      become: true
      loop: "{{ q('dict', hostvars.localhost.beaker_lab.system_inventory | default({})) }}"

    - name: Create any systems in Beaker which were not already present
      command: >
        bkr system-create
        --lab-controller={{ hostvars.localhost.beaker_lab.labcontroller_fqdn | default(hostvars.localhost.beaker_lab.jumpbox_fqdn) }}
        --arch={{ hostvars.localhost.beaker_lab.system_inventory[item.key].arch }}
        --power-type={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_type }}
        --power-address={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_address }}
        --power-user={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_user }}
        --power-password={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_password }}
        --power-id={{ hostvars.localhost.beaker_lab.system_inventory[item.key].power_id | default(item.key) }}
        --condition=Automated
        --release-action=LeaveOn
        {{ item.key }}
      when: item.key not in bkr_systems.stdout_lines
      become: true
      loop: "{{ q('dict', hostvars.localhost.beaker_lab.system_inventory | default({})) }}"
