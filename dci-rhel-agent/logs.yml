---
#
# Tasks are included to run on beaker_server host,
# Delegate_to: localhost when needed.
#
- name: Collect and Upload logs
  when: hostvars.beaker_server.bkrjobid is defined
  block:
    - name: List all logs files available for the Beaker Job
      shell: 'bkr job-logs {{ hostvars.beaker_server.bkrjobid }}'
      register: bkr_files

    - name: Download all logs files to Beaker server
      get_url:
        url: "{{ item }}"
        dest: "{{ hostvars.beaker_server.job_logs.path }}"
      with_items: "{{ bkr_files.stdout_lines }}"

    - name: Download JUnit results to Beaker server
      shell: bkr job-results --format=junit-xml {{ hostvars.beaker_server.bkrjobid }} > {{ beaker_results }}
      args:
        creates: '{{ beaker_results }}'
      vars:
        beaker_results: '{{hostvars.beaker_server.job_artifacts.path }}/beaker-results.xml'

    # This prevent faillure in case dci-rhel-agent can't reach HTTP (private IP, ACL, ...)
    - name: Synchronize logs directory from Beaker server to dci-rhel-agent
      synchronize:
        src: '{{ hostvars.beaker_server.job_logs.path }}'
        dest: '/var/tmp'
        mode: pull
        private_key: '/etc/dci-rhel-agent/secrets/id_rsa'
      delegate_to: localhost
      when: hostvars.beaker_server['ansible_connection'] is not defined

    - name: Synchronize artifacts directory from Beaker server to dci-rhel-agent
      synchronize:
        src: '{{ hostvars.beaker_server.job_artifacts.path }}'
        dest: '/var/tmp'
        mode: pull
        private_key: '/etc/dci-rhel-agent/secrets/id_rsa'
      delegate_to: localhost
      when: hostvars.beaker_server['ansible_connection'] is not defined

    - name: Upload logs directory to DCI Control Server
      delegate_to: localhost
      environment:
        - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
        - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
        - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
      dci_file:
        path: '{{ item }}'
        name: '{{ item | basename }}'
        job_id: '{{ hostvars.localhost.job_id }}'
      with_fileglob:
        - '{{ hostvars.localhost.job_logs.path }}/*'
        - '{{ hostvars.localhost.job_artifacts.path }}/*.log'

    - name: Upload artifacts directory to DCI Control Server
      environment:
        - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
        - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
        - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
      dci_file:
        path: '{{ item }}'
        name: "{{ item | basename | regex_replace('^(.*\\.cli\\.)?(.*).xml$','\\2') }}"
        job_id: '{{ hostvars.localhost.job_id }}'
        mime: 'application/junit'
      with_fileglob: '{{ hostvars.localhost.job_artifacts.path }}/*.xml'

    - name: Delete tmp logs directory from Beaker server
      file:
        state: absent
        path: "{{ item }}"
      with_items:
        - "{{ hostvars.beaker_server.job_logs.path }}"
        - "{{ hostvars.beaker_server.job_artifacts.path }}"