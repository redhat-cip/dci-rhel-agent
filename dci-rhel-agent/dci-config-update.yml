---
- name: Update Beaker server config
  hosts: beaker_server
  gather_facts: false
  tasks:
    - include_vars: /etc/dci-rhel-agent/settings.yml

    - name: Verify xinetd tftp config file exists
      stat:
        path: /etc/xinetd.d/tftp
      register: tftp_cfg

    - name: Update xinetd tftp config to enable tftp
      lineinfile:
        path: /etc/xinetd.d/tftp
        regexp: 'disable\s*= yes'
        line: '        disable                  = no'
      when: tftp_cfg.stat.exists
      register: tftp_cfg_updated

    - name: Restart tftp, and xinetd packages when cfg updated
      service:
        name:
          - xinetd
          - tftp
        state: restarted
      when: tftp_cfg_updated

    - name: Create beaker.conf file
      template:
        src: /usr/share/dci-rhel-agent/templates/beaker.conf.j2
        dest: /etc/dnsmasq.d/beaker.conf
      register: beaker_file_update

    - name: Restart dnsmasq
      service:
        name: dnsmasq
        state: restarted
      when: beaker_file_update.changed

    - name: Query systems list
      command: bkr system-list
      register: bkr_systems
      changed_when: false
      become: true
      failed_when: false

    - debug:
        msg: "Beaker Systems: {{ bkr_systems.stdout_lines }}"

    - name: Create the systems in Beaker
      command: >
        bkr system-create
        --lab-controller={{ beaker_lab.jumpbox_fqdn }}
        --arch={{ beaker_lab.system_inventory[item.key].arch }}
        --power-type={{ beaker_lab.system_inventory[item.key].power_type }}
        --power-address={{ beaker_lab.system_inventory[item.key].power_address }}
        --power-user={{ beaker_lab.system_inventory[item.key].power_user }}
        --power-password={{ beaker_lab.system_inventory[item.key].power_password }}
        --power-id={{ beaker_lab.system_inventory[item.key].power_id | default(item.key) }}
        --condition=Automated
        {{ item.key }}
      when: item.key not in bkr_systems.stdout_lines
      become: true
      loop: "{{ lookup('dict', beaker_lab.system_inventory) }}"
