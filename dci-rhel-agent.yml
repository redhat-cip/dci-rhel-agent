---
- name: NEW JOB
  hosts: localhost
  tasks:
    - name: schedule a new job
      dci_job:
        topic: '{{ topic }}'
      register: job_info

    - name: set global variables
      set_fact:
        job_id: "{{ job_info['job']['id'] }}"
        topic_id: "{{ job_info['job']['topic_id'] }}"
        remoteci_id: "{{ job_info['job']['remoteci_id'] }}"
        components: "{{ job_info['job']['components'] }}"
        product: "{{ job_info['job']['topic']['product_id'] }}"

    - include_tasks: hooks/clean.yml
  tags:
      - new_job


- name: Retrieve keys and components
  hosts: localhost
  tasks:
    - block:
      - name: Import remoteci SSL keys
        vars:
          dci_import_keys_remoteci_id: '{{ remoteci_id }}'
        include_role:
          name: dci-import-keys

      - name: Retrieve components
        vars:
          dci_retrieve_component_local_repo: '{{ local_repo }}'
          dci_retrieve_component_component_id: '{{ item.id }}'
          dci_retrieve_component_component_name: '{% if item.type == "Compose" %}{{ topic }}{% else %}{{ item.type }}{% endif %}'
        include_role:
          name: dci-retrieve-component
        with_list: '{{ components }}'

      - name: Ensure image directories exist
        file:
          path: '{{ local_repo }}/{{ topic }}/{{ item.path }}'
          recurse: yes
          state: directory
        with_items: '{{ dci_rhel_agent_images }}'

      - name: Retrieve the .treeinfo file
        get_url:
          url: '{{ repo_url }}/{{ product }}/{{ topic_id }}/{{ components | json_query("[?type==`Compose`].id|[0]") }}/.treeinfo'
          dest: '{{ local_repo }}/{{ topic }}/.treeinfo'
          force: yes
          client_cert: /etc/ssl/repo/dci.crt
          client_key: /etc/ssl/repo/dci.key
          validate_certs: '{{ dci_rhel_agent_sslverify }}'
        become: true

      - name: Retrieve latest images
        get_url:
          url: '{{ repo_url }}/{{ product }}/{{ topic_id }}/{{ components | json_query("[?type==`Compose`].id|[0]") }}/{{ item.path }}/{{ item.name }}'
          dest: '{{ local_repo }}/{{ topic }}/{{ item.path }}/{{ item.name }}'
          client_cert: /etc/ssl/repo/dci.crt
          client_key: /etc/ssl/repo/dci.key
          validate_certs: '{{ dci_rhel_agent_sslverify }}'
          checksum: "{{Â lookup('ini', '{{ item.path }}/{{ item.name }} section=checksums file={{ local_repo }}/{{ topic }}/.treeinfo') }}"
        with_items: '{{ dci_rhel_agent_images }}'
        become: true
      rescue:
        - include_tasks: dci/failure.yml
  tags:
    - new_job


- name: PREPARE LAB
  hosts: beaker-lab
  vars:
    dci_status: 'pre-run'
  tasks:
    - block:
        - include_tasks: hooks/import.yml
      rescue:
        - include_tasks: dci/failure.yml
  tags:
      - prepare_lab


- name: LAUNCH INSTALL
  hosts: localhost
  vars:
    dci_status: 'running'
  tasks:
    - block:
        - include_tasks: hooks/install.yml
      rescue:
        - include_tasks: dci/failure.yml
  tags:
      - install

- name: TESTS
  hosts: beaker-host
  vars:
    dci_status: 'post-run'
  tasks:
    - block:
        - name: Launch RHEL Certification Test
          include_role:
            name: dci-rhel-certification
          when: dci_rhel_agent_cert|bool
      rescue:
        - include_tasks: dci/release.yml
        - include_tasks: dci/failure.yml
  tags:
      - test


- name: RELEASE SERVER
  hosts: beaker-host
  vars:
    dci_status: 'post-run'
  tasks:
    - block:
        - include_tasks: dci/release.yml
      rescue:
        - include_tasks: dci/failure.yml


- name: SUCCESS
  hosts: localhost
  vars:
    dci_status: 'success'
  tasks:
    - include_tasks: dci/success.yml
  tags:
      - success
